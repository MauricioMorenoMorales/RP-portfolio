import React, { useState } from 'react';
import styled from 'styled-components';
import { colorSystem } from '../../global/designSystem';

const Icons: React.FC<{
	type:
		| 'burger'
		| 'linkedin'
		| 'github'
		| 'email'
		| 'react'
		| 'typescript'
		| 'reduxToolkit'
		| 'figma'
		| string;
}> = ({ type }) => {
	const Container = styled.div`
		cursor: pointer;
		user-select: none;
		display: inline;
	`;
	const SimpleContainer = styled.div`
		user-select: none;
		display: inline;
	`;
	const [hover, setHover] = useState<boolean>(false);
	if (type === 'burger')
		return (
			<Container>
				<svg
					width="32"
					height="32"
					viewBox="0 0 32 32"
					fill="none"
					xmlns="http://www.w3.org/2000/svg"
					onMouseEnter={() => setHover(true)}
					onMouseLeave={() => setHover(false)}
					onClick={() => setHover(false)}
				>
					<path
						d="M0.999974 6.99998H30.9999C31.552 6.99998 31.9999 6.55194 31.9999 6C31.9999 5.44798 31.5519 5.00003 30.9999 5.00003H0.999974C0.448035 5.00003 0 5.44798 0 6C0 6.55203 0.448035 6.99998 0.999974 6.99998Z"
						fill={hover ? colorSystem.blue : '#f2f2f2'}
					/>
					<path
						d="M30.9999 15H0.999974C0.447952 15 0 15.4481 0 16C0 16.5519 0.448035 17 0.999974 17H30.9999C31.552 17 31.9999 16.5519 31.9999 16C31.9999 15.4481 31.552 15 30.9999 15Z"
						fill={hover ? colorSystem.blue : '#f2f2f2'}
					/>
					<path
						d="M30.9999 25H0.999974C0.447952 25 0 25.448 0 26C0 26.552 0.448035 26.9999 0.999974 26.9999H30.9999C31.552 26.9999 31.9999 26.5519 31.9999 26C32 25.448 31.552 25 30.9999 25Z"
						fill={hover ? colorSystem.blue : '#f2f2f2'}
					/>
				</svg>
			</Container>
		);
	else if (type === 'email')
		return (
			<Container>
				<svg
					width="32"
					height="22"
					viewBox="0 0 32 22"
					fill="none"
					xmlns="http://www.w3.org/2000/svg"
				>
					<path
						d="M28.0913 0.137817H3.90873C1.75355 0.137817 0 1.89137 0 4.04655V17.9534C0 20.1086 1.75355 21.8622 3.90873 21.8622H28.0913C30.2464 21.8622 32 20.1086 32 17.9534V4.04697C32.0004 1.89137 30.2469 0.137817 28.0913 0.137817ZM26.1813 2.68782L16 9.24728L5.81868 2.68782H26.1813ZM28.0913 19.3126H3.90873C3.15945 19.3126 2.55 18.7027 2.55 17.9538V4.11922L15.2133 12.2622C15.2303 12.2729 15.2486 12.2801 15.266 12.2899C15.2843 12.3001 15.303 12.3098 15.3217 12.3192C15.4199 12.3698 15.521 12.4106 15.6243 12.4373C15.6349 12.4403 15.6455 12.4416 15.6562 12.4441C15.7697 12.4709 15.8844 12.4875 15.9992 12.4875C15.9996 12.4875 16 12.4875 16 12.4875C16.0009 12.4875 16.0013 12.4875 16.0017 12.4875C16.1165 12.4875 16.2312 12.4713 16.3447 12.4441C16.3553 12.4416 16.3659 12.4403 16.3766 12.4373C16.4798 12.4106 16.5806 12.3698 16.6792 12.3192C16.6979 12.3098 16.7166 12.3001 16.7348 12.2899C16.7523 12.2801 16.7705 12.2729 16.7875 12.2622L29.4508 4.11922V17.9534C29.4504 18.7027 28.8405 19.3126 28.0913 19.3126Z"
						fill="#56CCF2"
					/>
				</svg>
			</Container>
		);
	else if (type === 'github')
		return (
			<Container>
				<svg
					width="24"
					height="24"
					viewBox="0 0 24 24"
					fill="none"
					xmlns="http://www.w3.org/2000/svg"
					onMouseEnter={() => setHover(true)}
					onMouseLeave={() => setHover(false)}
					onClick={() => setHover(false)}
				>
					<path
						d="M12 0.296997C5.37 0.296997 0 5.67 0 12.297C0 17.6 3.438 22.097 8.205 23.682C8.805 23.795 9.025 23.424 9.025 23.105C9.025 22.82 9.015 22.065 9.01 21.065C5.672 21.789 4.968 19.455 4.968 19.455C4.422 18.07 3.633 17.7 3.633 17.7C2.546 16.956 3.717 16.971 3.717 16.971C4.922 17.055 5.555 18.207 5.555 18.207C6.625 20.042 8.364 19.512 9.05 19.205C9.158 18.429 9.467 17.9 9.81 17.6C7.145 17.3 4.344 16.268 4.344 11.67C4.344 10.36 4.809 9.29 5.579 8.45C5.444 8.147 5.039 6.927 5.684 5.274C5.684 5.274 6.689 4.952 8.984 6.504C9.944 6.237 10.964 6.105 11.984 6.099C13.004 6.105 14.024 6.237 14.984 6.504C17.264 4.952 18.269 5.274 18.269 5.274C18.914 6.927 18.509 8.147 18.389 8.45C19.154 9.29 19.619 10.36 19.619 11.67C19.619 16.28 16.814 17.295 14.144 17.59C14.564 17.95 14.954 18.686 14.954 19.81C14.954 21.416 14.939 22.706 14.939 23.096C14.939 23.411 15.149 23.786 15.764 23.666C20.565 22.092 24 17.592 24 12.297C24 5.67 18.627 0.296997 12 0.296997Z"
						fill={hover ? colorSystem.blue : '#f2f2f2'}
					/>
				</svg>
			</Container>
		);
	else if (type === 'linkedin')
		return (
			<Container>
				<svg
					width="24"
					height="24"
					viewBox="0 0 24 24"
					fill="none"
					xmlns="http://www.w3.org/2000/svg"
					onMouseEnter={() => setHover(true)}
					onMouseLeave={() => setHover(false)}
					onClick={() => setHover(false)}
				>
					<path
						d="M20.447 20.452H16.893V14.883C16.893 13.555 16.866 11.846 15.041 11.846C13.188 11.846 12.905 13.291 12.905 14.785V20.452H9.351V9H12.765V10.561H12.811C13.288 9.661 14.448 8.711 16.181 8.711C19.782 8.711 20.448 11.081 20.448 14.166V20.452H20.447ZM5.337 7.433C4.193 7.433 3.274 6.507 3.274 5.368C3.274 4.23 4.194 3.305 5.337 3.305C6.477 3.305 7.401 4.23 7.401 5.368C7.401 6.507 6.476 7.433 5.337 7.433ZM7.119 20.452H3.555V9H7.119V20.452ZM22.225 0H1.771C0.792 0 0 0.774 0 1.729V22.271C0 23.227 0.792 24 1.771 24H22.222C23.2 24 24 23.227 24 22.271V1.729C24 0.774 23.2 0 22.222 0H22.225Z"
						fill={hover ? colorSystem.blue : '#f2f2f2'}
					/>
				</svg>
			</Container>
		);
	else if (type === 'react')
		return (
			<SimpleContainer>
				<svg
					width="24"
					height="24"
					viewBox="0 0 24 24"
					fill="none"
					xmlns="http://www.w3.org/2000/svg"
				>
					<path
						d="M14.23 12.004C14.23 12.5968 13.9946 13.1654 13.5754 13.5847C13.1563 14.004 12.5879 14.2397 11.995 14.24C11.402 14.24 10.8332 14.0044 10.4139 13.5851C9.99458 13.1658 9.759 12.597 9.759 12.004C9.759 11.4111 9.99444 10.8426 10.4136 10.4233C10.8327 10.004 11.4011 9.76826 11.994 9.76799C12.587 9.76799 13.1558 10.0036 13.5751 10.4229C13.9944 10.8422 14.23 11.411 14.23 12.004V12.004ZM16.878 1.314C15.532 1.314 13.771 2.274 11.99 3.936C10.21 2.283 8.448 1.334 7.103 1.334C6.693 1.334 6.32 1.427 5.997 1.612C4.622 2.405 4.314 4.876 5.024 7.977C1.98 8.917 0 10.42 0 12.004C0 13.594 1.99 15.101 5.043 16.034C4.339 19.147 4.653 21.622 6.031 22.414C6.351 22.601 6.721 22.689 7.133 22.689C8.478 22.689 10.24 21.729 12.021 20.065C13.801 21.719 15.563 22.668 16.908 22.668C17.318 22.668 17.691 22.578 18.014 22.393C19.388 21.601 19.697 19.13 18.987 16.028C22.02 15.096 24 13.59 24 12.004C24 10.414 22.01 8.90699 18.957 7.97199C19.661 4.862 19.347 2.385 17.969 1.592C17.651 1.408 17.281 1.315 16.877 1.314H16.878ZM16.873 2.404V2.41C17.098 2.41 17.279 2.454 17.431 2.537C18.097 2.919 18.386 4.372 18.161 6.241C18.107 6.701 18.019 7.186 17.911 7.681C16.951 7.445 15.905 7.26399 14.804 7.14699C14.144 6.24199 13.459 5.41999 12.769 4.69999C14.361 3.21999 15.856 2.408 16.874 2.405L16.873 2.404ZM7.103 2.424C8.115 2.424 9.617 3.232 11.213 4.704C10.527 5.424 9.843 6.24099 9.193 7.14599C8.086 7.26299 7.039 7.44399 6.08 7.68399C5.968 7.19399 5.885 6.71999 5.826 6.26399C5.596 4.39599 5.88 2.944 6.54 2.557C6.73 2.467 6.94 2.43 7.103 2.425V2.424ZM11.985 5.47399C12.44 5.94199 12.895 6.466 13.345 7.03799C12.905 7.01799 12.455 7.004 12 7.004C11.54 7.004 11.085 7.01399 10.64 7.03799C11.08 6.466 11.535 5.942 11.985 5.473V5.47399ZM12 8.1C12.74 8.1 13.477 8.13399 14.202 8.19299C14.608 8.77499 15.004 9.396 15.385 10.053C15.757 10.693 16.095 11.343 16.403 11.999C16.095 12.654 15.757 13.309 15.39 13.949C15.01 14.609 14.617 15.237 14.21 15.819C13.482 15.882 12.744 15.917 12 15.917C11.26 15.917 10.523 15.882 9.798 15.824C9.392 15.242 8.996 14.62 8.615 13.964C8.243 13.324 7.905 12.674 7.597 12.018C7.9 11.361 8.243 10.705 8.61 10.064C8.99 9.40399 9.383 8.77799 9.79 8.19599C10.518 8.13199 11.256 8.09799 12 8.09799V8.1ZM8.365 8.35399C8.125 8.73099 7.885 9.11699 7.661 9.51399C7.436 9.90399 7.226 10.296 7.026 10.688C6.761 10.032 6.536 9.37799 6.35 8.74099C6.99 8.59099 7.665 8.45799 8.365 8.35499V8.35399ZM15.625 8.35399C16.32 8.45699 16.99 8.58399 17.631 8.74099C17.451 9.37299 17.226 10.023 16.971 10.674C16.771 10.284 16.561 9.89099 16.331 9.49999C16.106 9.10799 15.866 8.72599 15.626 8.35399H15.625ZM18.688 9.029C19.172 9.179 19.632 9.346 20.063 9.527C21.795 10.267 22.915 11.235 22.915 12.003C22.91 12.771 21.79 13.743 20.058 14.478C19.638 14.658 19.178 14.82 18.703 14.971C18.423 14.013 18.057 13.015 17.603 11.991C18.053 10.974 18.413 9.981 18.688 9.027V9.029ZM5.293 9.03299C5.571 9.99299 5.938 10.99 6.393 12.013C5.943 13.03 5.581 14.023 5.307 14.977C4.823 14.827 4.363 14.659 3.937 14.477C2.205 13.74 1.085 12.771 1.085 12.003C1.085 11.235 2.205 10.261 3.937 9.527C4.357 9.347 4.817 9.18499 5.293 9.03299V9.03299ZM16.971 13.313C17.236 13.97 17.461 14.625 17.647 15.261C17.007 15.418 16.331 15.551 15.631 15.651C15.871 15.276 16.111 14.889 16.336 14.493C16.561 14.103 16.771 13.705 16.972 13.313H16.971ZM7.026 13.333C7.226 13.725 7.436 14.116 7.666 14.508C7.896 14.898 8.131 15.28 8.371 15.651C7.676 15.549 7.006 15.421 6.365 15.265C6.545 14.635 6.771 13.983 7.025 13.332L7.026 13.333ZM17.92 16.32C18.032 16.813 18.12 17.288 18.174 17.743C18.404 19.611 18.12 21.063 17.46 21.451C17.313 21.541 17.122 21.579 16.897 21.579C15.885 21.579 14.383 20.772 12.787 19.299C13.473 18.579 14.157 17.763 14.807 16.859C15.914 16.741 16.961 16.559 17.92 16.319V16.32ZM6.09 16.33C7.05 16.564 8.096 16.745 9.197 16.862C9.857 17.767 10.542 18.589 11.232 19.308C9.637 20.791 8.14 21.603 7.122 21.603C6.902 21.598 6.716 21.553 6.569 21.471C5.903 21.091 5.614 19.637 5.839 17.768C5.893 17.308 5.981 16.824 6.089 16.33H6.09ZM10.65 16.97C11.09 16.99 11.54 17.004 11.995 17.004C12.455 17.004 12.91 16.994 13.355 16.97C12.915 17.542 12.46 18.065 12.01 18.535C11.555 18.065 11.1 17.542 10.65 16.97Z"
						fill="#2F80ED"
					/>
				</svg>
			</SimpleContainer>
		);
	else if (type === 'figma')
		return (
			<SimpleContainer>
				<svg
					width="17"
					height="24"
					viewBox="0 0 17 24"
					fill="none"
					xmlns="http://www.w3.org/2000/svg"
				>
					<path
						d="M12.195 8.981H7.607V0H12.195C14.671 0 16.685 2.014 16.685 4.49C16.685 6.966 14.671 8.981 12.195 8.981ZM9.078 7.51H12.195C13.86 7.51 15.214 6.155 15.214 4.491C15.214 2.827 13.859 1.472 12.195 1.472H9.078V7.51ZM9.078 8.981H4.491C2.015 8.981 0.000999928 6.967 0.000999928 4.491C0.000999928 2.015 2.015 0 4.491 0H9.079V8.981H9.078ZM4.491 1.471C2.826 1.471 1.472 2.826 1.472 4.49C1.472 6.154 2.826 7.51 4.491 7.51H7.608V1.471H4.491ZM9.078 16.49H4.491C2.015 16.49 0.000999928 14.476 0.000999928 12C0.000999928 9.524 2.015 7.51 4.491 7.51H9.079V16.49H9.078ZM4.491 8.981C2.826 8.981 1.472 10.336 1.472 12C1.472 13.664 2.827 15.019 4.491 15.019H7.608V8.981H4.491ZM4.515 24C2.026 24 0 21.986 0 19.51C0 17.034 2.014 15.02 4.49 15.02H9.078V19.461C9.078 21.964 7.031 24 4.515 24ZM4.491 16.49C3.69064 16.4911 2.92336 16.8095 2.35741 17.3754C1.79147 17.9414 1.47306 18.7086 1.472 19.509C1.472 21.174 2.837 22.528 4.516 22.528C6.221 22.528 7.609 21.152 7.609 19.46V16.49H4.491ZM12.195 16.49H12.097C9.621 16.49 7.607 14.476 7.607 12C7.607 9.524 9.621 7.51 12.097 7.51H12.195C14.671 7.51 16.685 9.524 16.685 12C16.685 14.476 14.671 16.49 12.195 16.49ZM12.098 8.981C10.433 8.981 9.079 10.336 9.079 12C9.079 13.664 10.434 15.019 12.098 15.019H12.196C13.861 15.019 15.215 13.664 15.215 12C15.215 10.336 13.859 8.981 12.195 8.981H12.098Z"
						fill="#F2994A"
					/>
				</svg>
			</SimpleContainer>
		);
	else if (type === 'typescript')
		return (
			<SimpleContainer>
				<svg
					width="24"
					height="24"
					viewBox="0 0 24 24"
					fill="none"
					xmlns="http://www.w3.org/2000/svg"
				>
					<path
						d="M1.125 0C0.502 0 0 0.502 0 1.125V22.875C0 23.498 0.502 24 1.125 24H22.875C23.498 24 24 23.498 24 22.875V1.125C24 0.502 23.498 0 22.875 0H1.125ZM18.488 9.75C19.1 9.75 19.642 9.787 20.115 9.861C20.5611 9.92784 20.9989 10.0418 21.421 10.201V12.659C21.2184 12.5189 21.0031 12.398 20.778 12.298C20.5458 12.1935 20.3062 12.1066 20.061 12.038C19.5966 11.9086 19.1171 11.8413 18.635 11.838C18.335 11.838 18.062 11.866 17.816 11.924C17.5967 11.9709 17.3864 12.0526 17.193 12.166C17.023 12.27 16.893 12.395 16.8 12.54C16.7065 12.6861 16.6578 12.8565 16.66 13.03C16.66 13.226 16.713 13.403 16.816 13.559C16.92 13.715 17.068 13.863 17.259 14.003C17.45 14.143 17.682 14.279 17.955 14.413C18.228 14.548 18.537 14.687 18.881 14.829C19.351 15.026 19.773 15.236 20.147 15.457C20.521 15.679 20.842 15.93 21.11 16.21C21.378 16.489 21.582 16.808 21.724 17.167C21.866 17.526 21.938 17.943 21.938 18.42C21.938 19.077 21.813 19.63 21.565 20.076C21.3227 20.5159 20.975 20.8887 20.553 21.161C20.0982 21.4494 19.5941 21.6514 19.066 21.757C18.5 21.877 17.903 21.937 17.276 21.937C16.6589 21.9397 16.0429 21.8848 15.436 21.773C14.9109 21.6822 14.4017 21.5161 13.924 21.28V18.65C14.8278 19.4191 15.9743 19.8441 17.161 19.85C17.494 19.85 17.785 19.82 18.033 19.76C18.282 19.7 18.489 19.616 18.656 19.51C18.822 19.402 18.946 19.276 19.029 19.13C19.1207 18.96 19.1625 18.7675 19.1494 18.5748C19.1363 18.3821 19.0689 18.197 18.955 18.041C18.8064 17.8444 18.6247 17.6752 18.418 17.541C18.1617 17.3711 17.8917 17.2226 17.611 17.097C17.2782 16.945 16.9425 16.7997 16.604 16.661C15.686 16.278 15.002 15.809 14.551 15.256C14.101 14.703 13.875 14.034 13.875 13.251C13.875 12.637 13.998 12.11 14.244 11.669C14.49 11.228 14.824 10.865 15.248 10.58C15.6965 10.2841 16.1943 10.0711 16.718 9.951C17.298 9.81426 17.8921 9.74679 18.488 9.75ZM3.375 9.938H12.938V12.104H9.506V21.75H6.789V12.104H3.375V9.938Z"
						fill="#2F80ED"
					/>
				</svg>
			</SimpleContainer>
		);
	else if (type === 'reduxToolkit')
		return (
			<SimpleContainer>
				<svg
					width="24"
					height="24"
					viewBox="0 0 24 24"
					fill="none"
					xmlns="http://www.w3.org/2000/svg"
				>
					<g clip-path="url(#clip0_121:65)">
						<path
							d="M16.634 16.504C17.504 16.429 18.177 15.664 18.134 14.75C18.087 13.836 17.338 13.102 16.425 13.102H16.364C15.9109 13.1182 15.4828 13.3136 15.1737 13.6453C14.8647 13.977 14.7001 14.4179 14.716 14.871C14.746 15.35 14.942 15.74 15.21 16.024C14.162 18.062 12.589 19.56 10.205 20.819C8.60199 21.657 6.90899 21.973 5.26099 21.749C3.88299 21.554 2.80499 20.939 2.14499 19.95C1.15699 18.451 1.06699 16.834 1.88999 15.216C2.48999 14.046 3.38899 13.193 3.98899 12.773C3.80786 12.2708 3.6674 11.7548 3.56899 11.23C-0.868014 14.408 -0.416014 18.752 0.931986 20.805C1.93599 22.303 3.98899 23.261 6.23599 23.261C6.83599 23.261 7.46599 23.217 8.07899 23.067C11.976 22.318 14.927 19.981 16.62 16.535L16.634 16.504ZM21.982 12.758C19.662 10.03 16.244 8.532 12.348 8.532H11.838C11.585 7.978 11.001 7.633 10.34 7.633H10.295C9.35199 7.633 8.61699 8.44299 8.64799 9.38599C8.67799 10.284 9.44199 11.034 10.356 11.034H10.43C10.7542 11.0215 11.0679 10.9159 11.3337 10.7299C11.5995 10.5439 11.8062 10.2853 11.929 9.985H12.484C14.793 9.985 16.979 10.659 18.972 11.977C20.499 12.982 21.594 14.3 22.209 15.874C22.747 17.162 22.718 18.421 22.164 19.471C21.309 21.118 19.87 21.988 17.968 21.988C16.769 21.988 15.601 21.613 15.001 21.344C14.641 21.642 14.041 22.137 13.607 22.437C14.925 23.035 16.259 23.38 17.547 23.38C20.469 23.38 22.641 21.733 23.466 20.144C24.364 18.346 24.29 15.32 21.996 12.728L21.982 12.758ZM6.48999 17.042C6.51999 17.941 7.28299 18.69 8.19799 18.69H8.25799C8.48317 18.6849 8.70505 18.6348 8.91057 18.5427C9.11609 18.4505 9.30109 18.3181 9.45467 18.1534C9.60824 17.9886 9.72729 17.7948 9.80481 17.5833C9.88232 17.3718 9.91672 17.147 9.90599 16.922C9.90599 16.022 9.12699 15.275 8.21299 15.275H8.15299C8.09299 15.275 8.00299 15.275 7.92699 15.304C6.68399 13.206 6.15899 10.957 6.35499 8.532C6.47499 6.704 7.07499 5.115 8.15199 3.797C9.05199 2.673 10.745 2.117 11.899 2.089C15.135 2.028 16.484 6.06 16.588 7.663L18.086 8.113C17.741 3.197 14.686 0.619995 11.764 0.619995C9.01999 0.619995 6.48999 2.613 5.46999 5.535C4.07699 9.43 4.99099 13.177 6.69999 16.174C6.54999 16.369 6.45999 16.713 6.48999 17.042Z"
							fill="#764ABC"
						/>
					</g>
					<defs>
						<clipPath id="clip0_121:65">
							<rect width="24" height="24" fill="white" />
						</clipPath>
					</defs>
				</svg>
			</SimpleContainer>
		);
	else return <></>;
};

export default Icons;
